import { PromptTemplate } from "@/lib/core/types";


export const technicalSpecificationTemplate: PromptTemplate = {
  id: "technical-specification",
  name: "Technical Specification",
  description: "Generate detailed technical requirements and specifications for development projects",
  category: "Architecture",
  difficulty: "advanced",
  icon: "FileCode",
  tags: ["technical", "specification", "architecture", "requirements"],
  template: `Create a comprehensive technical specification for {projectName}, a {projectType} that {projectDescription}.

Requirements:
- Architecture: {architecture}
- Tech Stack: {techStack}
- Key Features: {keyFeatures}
- Performance Requirements: {performanceReqs}
- Security Considerations: {securityReqs}
- Scalability: {scalabilityReqs}

Please provide detailed implementation guidance including file structure, component architecture, API design, and deployment considerations.`,
  fields: [
    {
      id: "projectName",
      label: "Project Name",
      type: "text",
      icon: "Tag",
      placeholder: "Enter project name",
      description: "The name of your project",
      required: true,
    },
    {
      id: "projectType",
      label: "Project Type",
      type: "select",
      icon: "Layers",
      placeholder: "Select project type",
      description: "The type of application you're building",
      required: true,
      options: [
        "web application",
        "mobile app",
        "desktop application",
        "API service",
        "component library",
        "CLI tool",
        "browser extension",
        "microservice",
        "full-stack application",
        "static site",
      ],
    },
    {
      id: "projectDescription",
      label: "Project Description",
      type: "textarea",
      icon: "FileText",
      placeholder: "Describe what your project does...",
      description: "A clear description of your project's purpose and functionality",
      required: true,
    },
    {
      id: "architecture",
      label: "Architecture Pattern",
      type: "multiselect",
      icon: "Network",
      placeholder: "Select architecture patterns",
      description: "Architectural patterns and approaches to use",
      required: true,
      options: [
        "Microservices",
        "Monolithic",
        "Serverless",
        "JAMstack",
        "MVC",
        "Component-based",
        "Event-driven",
        "Layered architecture",
        "Clean architecture",
        "Hexagonal architecture",
      ],
    },
    {
      id: "techStack",
      label: "Technology Stack",
      type: "tags",
      icon: "Code2",
      placeholder: "Add technologies",
      description: "Technologies, frameworks, and tools to use",
      required: true,
      suggestions: [
        "Next.js",
        "React",
        "TypeScript",
        "Node.js",
        "Express",
        "PostgreSQL",
        "MongoDB",
        "Redis",
        "Docker",
        "AWS",
        "Vercel",
        "Tailwind CSS",
        "Prisma",
        "tRPC",
      ],
    },
    {
      id: "keyFeatures",
      label: "Key Features",
      type: "tags",
      icon: "Star",
      placeholder: "Add key features",
      description: "Main features and capabilities of your application",
      required: true,
      suggestions: [
        "User authentication",
        "Real-time updates",
        "File upload",
        "Search functionality",
        "Data visualization",
        "API integration",
        "Offline support",
        "Push notifications",
        "Multi-language support",
        "Admin dashboard",
      ],
    },
    {
      id: "performanceReqs",
      label: "Performance Requirements",
      type: "multiselect",
      icon: "Gauge",
      placeholder: "Select performance requirements",
      description: "Performance benchmarks and requirements",
      required: false,
      options: [
        "Sub-second page loads",
        "99.9% uptime",
        "Handle 10k+ concurrent users",
        "Mobile-first performance",
        "Offline functionality",
        "Progressive loading",
        "Optimistic updates",
        "Lazy loading",
        "Code splitting",
        "CDN optimization",
      ],
    },
    {
      id: "securityReqs",
      label: "Security Requirements",
      type: "multiselect",
      icon: "Shield",
      placeholder: "Select security requirements",
      description: "Security measures and compliance requirements",
      required: false,
      options: [
        "OAuth 2.0 authentication",
        "JWT tokens",
        "HTTPS only",
        "CSRF protection",
        "XSS prevention",
        "SQL injection protection",
        "Rate limiting",
        "Data encryption",
        "GDPR compliance",
        "SOC 2 compliance",
      ],
    },
    {
      id: "scalabilityReqs",
      label: "Scalability Requirements",
      type: "multiselect",
      icon: "TrendingUp",
      placeholder: "Select scalability requirements",
      description: "How the application should scale",
      required: false,
      options: [
        "Horizontal scaling",
        "Vertical scaling",
        "Auto-scaling",
        "Load balancing",
        "Database sharding",
        "Caching strategy",
        "CDN distribution",
        "Microservices ready",
        "Container orchestration",
        "Multi-region deployment",
      ],
    },
  ],
  examples: [
    {
      name: "E-commerce Platform",
      description: "Technical spec for a modern e-commerce platform",
      values: {
        projectName: "ModernShop",
        projectType: "full-stack application",
        projectDescription:
          "enables small businesses to create and manage online stores with integrated payment processing, inventory management, and customer analytics",
        architecture: ["Microservices", "Event-driven"],
        techStack: ["Next.js", "TypeScript", "PostgreSQL", "Redis", "Stripe API"],
        keyFeatures: ["User authentication", "Payment processing", "Inventory management", "Analytics dashboard"],
        performanceReqs: ["Sub-second page loads", "Handle 10k+ concurrent users"],
        securityReqs: ["OAuth 2.0 authentication", "HTTPS only", "PCI compliance"],
        scalabilityReqs: ["Horizontal scaling", "Auto-scaling", "CDN distribution"],
      },
    },
  ],
}
